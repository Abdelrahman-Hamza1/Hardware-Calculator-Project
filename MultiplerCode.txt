;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Thu Feb 1 2024
; Processor: PIC16F877A
; Compiler:  MPASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

#include p16f877a.inc                ; Include register definition file

;====================================================================
; VARIABLES
;====================================================================
HundredsOne EQU 0X20 
DigitsOne EQU 0X21
HundredsTwo EQU 0x30 
DigitsTwo EQU 0x31

TimerCounter EQU 0x32

FLAGS EQU 0X32
DigitSelect EQU 0 ; INDEX 0 IN FLAGS WILL DETERMINE THE DIGIT (HUNDREDS OR DIGITS)
NumSelect EQU 1
;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
RST   code  0x0 
      goto  Start
      
      
; ISR could be triggered by one of two ways
; 1) Button Click: Increment Current Character By 1 (No more than 10)
; 2) 2 Seconds Has Passed: Move to next character
; FLAGS == 0 -> HundredsOne || FLAGS == 1 -> DigitsOne || Flags == 2 -> HundredsTwo || Flags == 3 -> DigitsTwo
; Thus the timer interrupt would ONLY Increment FLAGS Register and the rest of the logic relies on button interrupts
ISR   code 0x04
      NOP 

      BANKSEL PIR1
      BTFSC PIR1, 0 
      GOTO TimerInterrupt ; If Bit SET -> GOTO TIMER INTERRUPT
   
      ;; if not timer interrupt then the interrupt is from the PUSH BUTTON
      BCF INTCON, INTF ; Clear Interrupt Flag
       
      BANKSEL PORTA ; PORTA IN Bank 0 
     
     
     MOVF FLAGS, W     
     XORLW 0x00       
     BTFSC STATUS, Z  
     GOTO Test1
     INCF HundredsOne,F 
     GOTO ifDone
    
    ; Check if REG == 1
Test1     
     MOVF FLAGS, W 
     XORLW 0x01       
     BTFSC STATUS, Z  
     GOTO Test2
     INCF DigitsOne,F 
     GOTO ifDone
    
    ; Check if REG == 2
Test2
    MOVF FLAGS, W  
     XORLW 0x0
     BTFSC STATUS, Z 
     GOTO Test3
     INCF HundredsTwo,F 
     GOTO ifDone
    
    ; Check if REG == 3
Test3
    MOVF FLAGS, W 
     XORLW 0x03       
     BTFSC STATUS, Z  
     GOTO ifDone
     INCF DigitsTwo,F     
ifDone
   
      NOP
      BCF INTCON, 1 ; Clear the flag interrupt bit
      GOTO endInt
      
      
      
TimerInterrupt       
      NOP
      INCF TimerCounter, F ; inc and get 
      MOVF TimerCounter, W
      
      XORLW 0x04       
      BTFSS STATUS, Z  
      GOTO endInt
      
      INCF FLAGS ,F 
      BANKSEL PIR1
      BCF PIR1, 0 
      CLRF TimerCounter
      
      
      
      
endInt
      NOP
      BANKSEL TMR1H
      CLRF TMR1H 
      CLRF TMR1L
      BANKSEL PORTB
      movf PORTB, F	; Read PortB (to itself) to end mismatch condition
      RETFIE     

;====================================================================
; CODE SEGMENT
;====================================================================

PGM   code
Start
      NOP
      ;; Initializations Here!
      BANKSEL TRISD 
      CLRF TRISD 
      
      BANKSEL TRISC 
      CLRF TRISC 
      
      BANKSEL TRISB 
      BSF TRISB, 0
      
      ; Enable Interrupts!
      BSF INTCON, GIE 
      BSF INTCON, PEIE 
      BSF INTCON, INTE
      
      BANKSEL T1CON
      BSF T1CON, T1CKPS1
      BSF T1CON, T1CKPS0  ; 1:8 prescaler
      ;BSF T1CON, TMR1ON ; GET IT COUNTING! ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      
      BANKSEL PIE1
      BSF PIE1, TMR1IE 
      
      BANKSEL PORTD
      ; Code Here!
      
      ;; First LCD Task
      
      ;; Write Number 1 on LCD  & Move cursor to 2nd line 
      
      BANKSEL T1CON
      BSF T1CON, TMR1ON ; start timer. 
      
      ;; We will loop until flag == 3 
      
Loop 
      NOP
      BANKSEL PORTA ; FLAG reg in same bank as PORTA    
      BTFSC FLAGS, 1 ; Bit 1 is set = FLAGS = 2/3 -> Break Out  
      GOTO Number2
      GOTO Loop
      
      
Number2
      NOP 
      BANKSEL T1CON
      BCF, T1CON, TMR1ON ;; Disable timer & do LCD Work
      
      ;;;;;;;;;;;;;;;;;;;;;;;;
      ;; LCD Work.
      ;;;;;;;;;;;;;;;;;;;;;;;;
        
      ;; After finishing LCD Work, Re-enable Timer & Reset it and go again
      NOP
      BANKSEL T1CON
      BSF, T1CON, TMR1ON
      BANKSEL TMR1H
      CLRF TMR1H 
      CLRF TMR1L
     
Loop2
      NOP
      BANKSEL PORTA ; FLAG reg in same bank as PORTA    
      BTFSC FLAGS, 3 ; Bit 3 is set = FLAGS = 4 or higher -> Break Out  
      GOTO Communication
      GOTO Loop2

Communication    
      NOP
      ;; Serial Coms with PIC #2
      
;====================================================================
      END
